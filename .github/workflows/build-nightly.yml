name: Build OpenSupaplex Nightly
on:
  push:
    tags:
      - nightly
jobs:
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        ./macos/ci-prepare.sh
      shell: bash
    - name: Build OpenSupaplex
      run: |
        ./macos/ci-build.sh
      shell: bash
    - name: Deploy Nightly
      uses: WebFreak001/deploy-nightly@v1.0.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
      with:
        upload_url: https://uploads.github.com/repos/sergiou87/open-supaplex/releases/25661714/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
        release_id: 25661714 # same as above (id can just be taken out the upload_url, it's used to find old releases)
        asset_path: macos/OpenSupaplex-macOS.zip # path to archive to upload
        asset_name: OpenSupaplex-macOS-$$.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
        asset_content_type: application/binary # required by GitHub API
        max_releases: 1 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
  build-vita:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Install VitaSDK
      run: |
        ./vita/ci-install-vitasdk.sh
      shell: bash
    - name: Build OpenSupaplex
      run: |
        ./vita/ci-build-vita.sh
      shell: bash
    - name: Deploy Nightly
      uses: WebFreak001/deploy-nightly@v1.0.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
      with:
        upload_url: https://uploads.github.com/repos/sergiou87/open-supaplex/releases/25661714/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
        release_id: 25661714 # same as above (id can just be taken out the upload_url, it's used to find old releases)
        asset_path: vita/build/OpenSupaplex.vpk # path to archive to upload
        asset_name: OpenSupaplex-vita-$$.vpk # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
        asset_content_type: application/binary # required by GitHub API
        max_releases: 1 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
  build-3ds:
    runs-on: ubuntu-18.04
    container: devkitpro/devkitarm:latest
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        ./3ds/ci-install-dependencies.sh
      shell: bash
    - name: Build OpenSupaplex
      run: |
        ./3ds/ci-build.sh
      shell: bash
    - name: Deploy Nightly
      uses: WebFreak001/deploy-nightly@v1.0.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
      with:
        upload_url: https://uploads.github.com/repos/sergiou87/open-supaplex/releases/25661714/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
        release_id: 25661714 # same as above (id can just be taken out the upload_url, it's used to find old releases)
        asset_path: 3ds/OpenSupaplex-3ds.zip # path to archive to upload
        asset_name: OpenSupaplex-3ds-$$.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
        asset_content_type: application/zip # required by GitHub API
        max_releases: 1 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
  build-switch:
    runs-on: ubuntu-18.04
    container: devkitpro/devkita64:latest
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        ./switch/ci-install-dependencies.sh
      shell: bash
    - name: Build OpenSupaplex
      run: |
        ./switch/ci-build-switch.sh
      shell: bash
    - name: Deploy Nightly
      uses: WebFreak001/deploy-nightly@v1.0.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
      with:
        upload_url: https://uploads.github.com/repos/sergiou87/open-supaplex/releases/25661714/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
        release_id: 25661714 # same as above (id can just be taken out the upload_url, it's used to find old releases)
        asset_path: switch/OpenSupaplex-switch.zip # path to archive to upload
        asset_name: OpenSupaplex-switch-$$.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
        asset_content_type: application/zip # required by GitHub API
        max_releases: 1 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
  build-windows-x86_64:
    runs-on: windows-latest
    steps:
    - uses: numworks/setup-msys2@v1
    - run: git config --global core.autocrlf false
    - uses: actions/checkout@v1
    - name: Prepare build environment
      run: |
        msys2do ./windows/ci-prepare.sh x86_64
    - name: Build OpenSupaplex for Windows x86_64
      run: |
        cd windows
        msys2do ./ci-build.sh x86_64
    - name: Deploy Nightly
      uses: WebFreak001/deploy-nightly@v1.0.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
      with:
        upload_url: https://uploads.github.com/repos/sergiou87/open-supaplex/releases/25661714/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
        release_id: 25661714 # same as above (id can just be taken out the upload_url, it's used to find old releases)
        asset_path: windows/OpenSupaplex-windows-x86_64.zip # path to archive to upload
        asset_name: OpenSupaplex-windows-x86_64-$$.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
        asset_content_type: application/binary # required by GitHub API
        max_releases: 1 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
