name: Run OpenSupaplex Tests
on:
  push
jobs:
  build-windows-x64:
    runs-on: windows-latest
    steps:
    - uses: numworks/setup-msys2@v1
    - run: git config --global core.autocrlf false
    - uses: actions/checkout@v1
    - name: Prepare build environment
      run: |
        msys2do ./windows/ci-prepare-x64.sh
    - name: Build OpenSupaplex for Windows x64
      run: |
        cd windows
        msys2do ./ci-build-x64.sh
    - name: Deploy Nightly
      uses: WebFreak001/deploy-nightly@v1.0.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
      with:
        upload_url: https://uploads.github.com/repos/sergiou87/open-supaplex/releases/25661714/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
        release_id: 25661714 # same as above (id can just be taken out the upload_url, it's used to find old releases)
        asset_path: windows/OpenSupaplex-windows-x64.zip # path to archive to upload
        asset_name: OpenSupaplex-windows-x64-$$.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
        asset_content_type: application/binary # required by GitHub API
        max_releases: 3 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted

  # run-tests:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Prepare build environment
  #     run: |
  #       cd linux
  #       ./ci-prepare.sh
  #     shell: bash
  #   - name: Build OpenSupaplex for Linux
  #     run: |
  #       cd linux
  #       ./ci-build.sh
  #     shell: bash
  #   - id: run_tests
  #     name: Run tests
  #     run: |
  #       cd tests
  #       #/sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 800x600x24 -ac +extension GLX;
  #       #export SDL_VIDEODRIVER=x11;
  #       #export DISPLAY=:99.0;
  #       # Save the exit code for later, in case it failed, don't fail now.
  #       # If it failed because tests failed, at least it will upload the results.
  #       echo "::set-output name=run_tests_exit_code::0"
  #       (./run-tests.rb ../linux/OpenSupaplex-linux/OpenSupaplex > test-results.log \
  #         || echo "::set-output name=run_tests_exit_code::1")
  #     shell: bash
  #   - name: Upload test results
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: test-results
  #       path: tests/test-results.log
  #   - name: Print test results
  #     run: |
  #       cd tests
  #       cat test-results.log
  #     shell: bash
  #   - name: Finish job
  #     run: |
  #       exit ${{ steps.run_tests.outputs.run_tests_exit_code }}
